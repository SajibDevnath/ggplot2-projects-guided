[
  {
    "path": "posts/2020-12-20-project-3/",
    "title": "Project 3",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Sajib Devnath",
        "url": "https://www.sajibdevnath.com"
      }
    ],
    "date": "2020-12-20",
    "categories": [],
    "contents": "\r\n\r\n\r\nlibrary(tidyverse)\r\ntheme_set(theme_minimal())\r\n\r\n\r\n\r\n\r\n\r\nconfirmed_cases_worldwide <- read_csv(here::here(\"data\", \"confirmed_cases_worldwide.csv\"))\r\n\r\n\r\n\r\n\r\n\r\nggplot(confirmed_cases_worldwide, aes(date, cum_cases )) +\r\n  geom_line() \r\n\r\n\r\n\r\n\r\n\r\n\r\n# Read in datasets/confirmed_cases_china_vs_world.csv\r\nconfirmed_cases_china_vs_world <-  read_csv(here::here(\"data\", \"confirmed_cases_china_vs_world.csv\"))\r\n\r\n# See the result\r\nglimpse(confirmed_cases_china_vs_world)\r\n\r\n\r\nRows: 112\r\nColumns: 4\r\n$ is_china  <chr> \"China\", \"China\", \"China\", \"China\", \"China\", \"C...\r\n$ date      <date> 2020-01-22, 2020-01-23, 2020-01-24, 2020-01-25...\r\n$ cases     <dbl> 548, 95, 277, 486, 669, 802, 2632, 578, 2054, 1...\r\n$ cum_cases <dbl> 548, 643, 920, 1406, 2075, 2877, 5509, 6087, 81...\r\n\r\nggplot(confirmed_cases_china_vs_world, aes(date, cum_cases, color = is_china, group = is_china)) +\r\n  geom_line() +\r\n  ylab(\"Cumulative confirmed cases\")\r\n\r\n\r\n\r\n\r\n\r\n\r\nwho_events <- tribble(\r\n  ~ date, ~ event,\r\n  \"2020-01-30\", \"Global health\\nemergency declared\",\r\n  \"2020-03-11\", \"Pandemic\\ndeclared\",\r\n  \"2020-02-13\", \"China reporting\\nchange\"\r\n) %>%\r\n  mutate(date = as.Date(date))\r\n\r\nggplot(confirmed_cases_china_vs_world) +\r\n  geom_line(aes(date, cum_cases, color = is_china, group = is_china)) +\r\n  ylab(\"Cumulative confirmed cases\") +\r\n  geom_vline(data = who_events, aes(xintercept = date), linetype = 8) +\r\n  geom_text(data = who_events, aes(date, label = event), y = 1e5)\r\n\r\n\r\n\r\n\r\n\r\n\r\n# Filter for China, from Feb 15\r\nchina_after_feb15 <- confirmed_cases_china_vs_world %>%\r\n  filter(date >= as.Date(\"2020-02-15\"), is_china == \"China\")\r\n\r\n# Using china_after_feb15, draw a line plot cum_cases vs. date\r\n# Add a smooth trend line using linear regression, no error bars\r\nggplot(china_after_feb15, aes(date, cum_cases)) +\r\n  geom_line() +\r\n  geom_smooth(method = \"lm\", se = FALSE) +\r\n  ylab(\"Cumulative confirmed cases\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n# Filter confirmed_cases_china_vs_world for not China\r\nnot_china <- confirmed_cases_china_vs_world %>%\r\n  filter(is_china != \"China\")\r\n\r\n# Using not_china, draw a line plot cum_cases vs. date\r\n# Add a smooth trend line using linear regression, no error bars\r\nplt_not_china_trend_lin <- ggplot(not_china, aes(date, cum_cases)) +\r\n  geom_line() +\r\n  geom_smooth(method = \"lm\", se = FALSE) +\r\n  ylab(\"Cumulative confirmed cases\")\r\n\r\n# See the result\r\nplt_not_china_trend_lin \r\n\r\n\r\n\r\n\r\nFrom the plot above, we can see a straight line does not fit well at all, and the rest of the world is growing much faster than linearly. What if we added a logarithmic scale to the y-axis?\r\n\r\n\r\nplt_not_china_trend_lin + \r\n  scale_y_log10()\r\n\r\n\r\n\r\n\r\n\r\n\r\nconfirmed_cases_by_country <- read_csv(here::here(\"data\", \"confirmed_cases_by_country.csv\"))\r\n\r\n\r\n\r\n\r\n\r\nconfirmed_cases_by_country %>% \r\n  group_by(country) %>% \r\n  summarize(total_cases = sum(cum_cases)) %>% \r\n  arrange(desc(total_cases)) %>% \r\n  head(7) -> top_countries_by_total_cases\r\n\r\n\r\n\r\n\r\n\r\nconfirmed_cases_top7_outside_china <- read_csv(here::here(\"data\", \"confirmed_cases_top7_outside_china.csv\")) \r\n\r\nggplot(confirmed_cases_top7_outside_china, aes(date, cum_cases, color = country)) +\r\n  geom_line() +\r\n  ylab(\"Cumulative confirmed cases\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-20-project-3/project-3_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2020-12-20T03:26:13+06:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-12-20-project-4/",
    "title": "Project 4",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Sajib Devnath",
        "url": "https://www.sajibdevnath.com"
      }
    ],
    "date": "2020-12-20",
    "categories": [],
    "contents": "\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(lubridate)\r\nlibrary(magrittr)\r\nlibrary(forecast)\r\n\r\n\r\n\r\n\r\n\r\nirish_potatoes <- read_csv(\r\n  here::here(\"data\", \"Potatoes_Irish.csv\"),\r\n  col_types = cols_only(\r\n    adm1_name = col_character(),\r\n    mkt_name = col_character(),\r\n    cm_name = col_character(),\r\n    mp_month = col_integer(),\r\n    mp_year = col_integer(),\r\n    mp_price = col_double()\r\n  )\r\n) %>% \r\n    rename(\r\n    region = adm1_name, \r\n    market = mkt_name,\r\n    commodity_kg = cm_name,\r\n    month = mp_month,\r\n    year = mp_year,\r\n    price_rwf = mp_price\r\n  )\r\n\r\n\r\n\r\n\r\n\r\nirish_potatoes %>% \r\n  mutate(date = ymd(paste(year, month, \"01\", sep = \"-\"))) %>% \r\n  select(-month, -year) -> potatoes_cleaned\r\n\r\n\r\n\r\n\r\n\r\nread_price_data <- function (commodity) {\r\n  irish_potatoes <- read_csv(\r\n  here::here(\"data\", paste0(commodity, \".csv\")),\r\n  col_types = cols_only(\r\n    adm1_name = col_character(),\r\n    mkt_name = col_character(),\r\n    cm_name = col_character(),\r\n    mp_month = col_integer(),\r\n    mp_year = col_integer(),\r\n    mp_price = col_double()\r\n  )\r\n) %>% \r\n    rename(\r\n    region = adm1_name, \r\n    market = mkt_name,\r\n    commodity_kg = cm_name,\r\n    month = mp_month,\r\n    year = mp_year,\r\n    price_rwf = mp_price\r\n  )\r\n  \r\n  irish_potatoes %>% \r\n  mutate(date = ymd(paste(year, month, \"01\", sep = \"-\"))) %>% \r\n  select(-month, -year) -> potatoes_cleaned\r\n}\r\n\r\n\r\n\r\n\r\n\r\nbeans_dry <- read_price_data(\"Beans (dry)\")\r\n\r\n\r\n\r\n\r\n\r\nprice_vs_time_plot <- function (prices, commodity) {\r\n  ggplot(potatoes_cleaned, aes(date, price_rwf, group = market)) +\r\n    geom_line(alpha = 0.2) +\r\n    ggtitle(paste0(commodity, \" price over time\"))\r\n}\r\n\r\n\r\n\r\n\r\n\r\nprice_vs_time_plot(beans_dry, \"Beans\")\r\n\r\n\r\n\r\n\r\n\r\n\r\npotato_prices_summarized <- potatoes_cleaned %>%\r\n    group_by(date) %>%\r\n    summarize(median_price_rwf = median(price_rwf))\r\n\r\n\r\n\r\n\r\n\r\npotato_time_series <- potato_prices_summarized %$% \r\n  ts(\r\n    median_price_rwf, \r\n    start = c(year(min(date)), month(min(date))), \r\n    end   = c(year(max(date)), month(max(date))), \r\n    frequency = 12\r\n  )\r\n\r\npotato_time_series\r\n\r\n\r\n          Jan      Feb      Mar      Apr      May      Jun      Jul\r\n2008  97.5000 100.0000  95.0000  96.2500  95.0000 110.0000 116.6667\r\n2009 120.0000 122.5000 130.0000 131.2500 135.0000 124.3125 125.8333\r\n2010 109.6875 113.5000 131.2500 132.0833 140.4167 147.3750 142.5000\r\n2011 105.7000 108.1750 118.8750 145.0143 148.6667 148.0500 137.4048\r\n2012 150.7500 175.2500 186.0139 186.2500 182.5000 162.7500 179.1250\r\n2013 154.3333 157.0000 171.2500 187.5000 177.0000 202.2500 210.0000\r\n2014 138.3333 158.7500 186.2500 198.2500 191.0000 189.3333 182.5000\r\n2015 136.2500 157.6071 178.0000 190.2778 179.3750 168.3333 180.0000\r\n          Aug      Sep      Oct      Nov      Dec\r\n2008 125.0000 136.2500 130.0000 127.5000 114.3750\r\n2009 144.2500 181.2500 170.0000 150.2500 112.0000\r\n2010 161.5000 182.4000 162.5000 151.5000 122.5000\r\n2011 137.2619 141.6667 144.2000 133.1750 141.5000\r\n2012 196.9643 226.5000 203.5000 169.2500 144.0000\r\n2013 233.1875 241.3333 237.5000 176.7083 140.0000\r\n2014 187.6191 200.0000 183.1309 150.0000 133.9286\r\n2015 202.1250 223.5000 217.5000 216.1250 190.0000\r\n\r\n\r\n\r\ncreate_price_time_series <- function(prices) {\r\n  potato_prices_summarized <- prices %>%\r\n    group_by(date) %>%\r\n    summarize(median_price_rwf = median(price_rwf))\r\n  \r\n  potato_time_series <- potato_prices_summarized %$% \r\n    ts(\r\n      median_price_rwf, \r\n      start = c(year(min(date)), month(min(date))), \r\n      end   = c(year(max(date)), month(max(date))), \r\n      frequency = 12\r\n    )\r\n  \r\n  potato_time_series\r\n}\r\n\r\n\r\n\r\n\r\n\r\ncreate_price_time_series(beans_dry)\r\n\r\n\r\n          Jan      Feb      Mar      Apr      May      Jun      Jul\r\n2008 270.0000 250.0000 265.0000 275.0000 288.7500 292.5000 333.3333\r\n2009 260.0000 254.3750 245.0000 250.0000 220.0000 234.1875 248.5000\r\n2010 256.0000 250.0000 251.5000 262.5000 275.4167 263.4583 279.9375\r\n2011 271.6250 250.0000 273.9000 303.3095 331.9000 309.3250 307.3500\r\n2012 265.0000 272.3333 296.6528 333.3333 346.6667 334.4285 317.5000\r\n2013 286.0000 293.5000 328.3750 352.5000 368.7679 371.3958 375.4750\r\n2014 345.5000 365.0000 392.2500 400.0000 384.1667 400.0000 400.0000\r\n2015 301.0000 305.0000 326.6667 391.3333 418.5000 400.0000 370.0000\r\n          Aug      Sep      Oct      Nov      Dec\r\n2008 370.0000 383.7500 377.5000 337.5000 300.0000\r\n2009 270.0000 326.6667 350.0000 381.7500 384.1667\r\n2010 293.5000 327.5000 326.0000 317.3974 306.3654\r\n2011 321.1667 329.9583 316.0000 310.5625 300.0000\r\n2012 333.8095 345.0000 350.0000 350.0000 345.7321\r\n2013 384.7250 472.3333 522.0000 524.5000 450.0000\r\n2014 403.2500 410.2500 391.0000 366.6667 344.8000\r\n2015 380.2500 396.6000 414.5417 448.2500 466.3750\r\n\r\n\r\n\r\npotato_price_forcast <- forecast(potato_time_series)\r\n\r\nautoplot(potato_price_forcast, main = \"Potato price forecast\")\r\n\r\n\r\n\r\n\r\n\r\n\r\nplot_price_forecast <- function(time_series, commodity) {\r\n  potato_price_forcast <- forecast(potato_time_series)\r\n  autoplot(potato_price_forcast, main = paste0(commodity, \" price forecast\"))\r\n}\r\n\r\n# Try the function on the pea data\r\nplot_price_forecast(beans_dry, \"Beans\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n# Choose dry beans as the commodity\r\ncommodity <- \"Peas+(fresh)\"\r\n\r\n# Read the price data\r\nbean_prices <- read_price_data(commodity)\r\n\r\n# Plot price vs. time\r\nprice_vs_time_plot(bean_prices, commodity)\r\n\r\n\r\n\r\n# Create a price time series\r\nbean_time_series <- create_price_time_series(bean_prices)\r\n\r\n# Plot the price forecast\r\nplot_price_forecast(bean_time_series, commodity)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-20-project-4/project-4_files/figure-html5/unnamed-chunk-7-1.png",
    "last_modified": "2020-12-20T13:53:52+06:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-12-20-project-5/",
    "title": "Project 5",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Sajib Devnath",
        "url": "https://www.sajibdevnath.com"
      }
    ],
    "date": "2020-12-20",
    "categories": [],
    "contents": "\r\n\r\n\r\nlibrary(tidyverse)\r\n\r\n\r\n\r\n\r\n\r\nby_tag_year <- read_csv(here::here(\"data\", \"by_tag_year.csv\"))\r\n\r\n\r\n\r\n\r\n\r\nby_tag_year_fraction <- by_tag_year %>% \r\n  mutate(fraction = number / year_total)\r\n\r\n\r\n\r\n\r\n\r\nby_tag_year_fraction %>% \r\n  filter(tag == \"r\")  -> r_over_time\r\n\r\n\r\n\r\n\r\n\r\nggplot(r_over_time, aes(year, fraction)) +\r\n    geom_line()\r\n\r\n\r\n\r\n\r\n\r\n\r\nselected_tags <- c(\"r\", \"dplyr\", \"ggplot2\")\r\n\r\nselected_tags_over_time <- r_over_time <- by_tag_year_fraction %>% \r\n  filter(tag %in% selected_tags)\r\n\r\nggplot(selected_tags_over_time, aes(year, fraction, color = tag)) +\r\n    geom_line()\r\n\r\n\r\n\r\n\r\n\r\n\r\nsorted_tags <- by_tag_year %>%\r\n    group_by(tag) %>%\r\n    summarise(n = sum(number)) %>%\r\n    arrange(desc(n))\r\n\r\n\r\n\r\n\r\n\r\nhighest_tags <- head(sorted_tags$tag)\r\n\r\nby_tag_subset <- by_tag_year_fraction %>%\r\n    filter(tag %in% highest_tags)\r\n\r\n# Plot tags over time on a line plot using color to represent tag\r\nggplot(by_tag_subset, aes(x = year,\r\n                          y = fraction,\r\n                          color = tag)) +\r\n  geom_line(size = 1)\r\n\r\n\r\n\r\n\r\n\r\n\r\n# Get tags of interest\r\nmy_tags <- c(\"android\", \"ios\", \"windows-phone\")\r\n\r\n# Filter for those tags\r\nby_tag_subset <- selected_tags_over_time <- by_tag_year_fraction %>%\r\n  filter(tag %in% my_tags)\r\n\r\n# Plot tags over time on a line plot using color to represent tag\r\nggplot(by_tag_subset, aes(x = year,\r\n                          y = fraction,\r\n                          color = tag)) +\r\n  geom_line(size = 1)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-20-project-5/project-5_files/figure-html5/unnamed-chunk-5-1.png",
    "last_modified": "2020-12-20T17:32:04+06:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-12-20-project-6/",
    "title": "Project 6",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Sajib Devnath",
        "url": "https://www.sajibdevnath.com"
      }
    ],
    "date": "2020-12-20",
    "categories": [],
    "contents": "\r\n\r\n\r\nlibrary(tidyverse)\r\n\r\n\r\n\r\n\r\n\r\nyearly <- read_csv(here::here(\"data\", \"yearly_deaths_by_clinic.csv\"))\r\n\r\n\r\n\r\n\r\n\r\nyearly %>% \r\n  mutate(proportion_deaths = deaths / births) -> yearly\r\n\r\n\r\n\r\n\r\n\r\nggplot(yearly, aes(year, proportion_deaths, color = clinic)) +\r\n  geom_line()\r\n\r\n\r\n\r\n\r\n\r\n\r\nmonthly <- read_csv(here::here(\"data\", \"monthly_deaths.csv\"))\r\n\r\n\r\n\r\n\r\n\r\nmonthly  <- monthly %>%\r\n    mutate(proportion_deaths = deaths / births)\r\nhead(monthly)\r\n\r\n\r\n# A tibble: 6 x 4\r\n  date       births deaths proportion_deaths\r\n  <date>      <dbl>  <dbl>             <dbl>\r\n1 1841-01-01    254     37           0.146  \r\n2 1841-02-01    239     18           0.0753 \r\n3 1841-03-01    277     12           0.0433 \r\n4 1841-04-01    255      4           0.0157 \r\n5 1841-05-01    255      2           0.00784\r\n6 1841-06-01    200     10           0.05   \r\n\r\n\r\n\r\nggplot(monthly, aes(date, proportion_deaths)) +\r\n  geom_line() + \r\n  labs(\r\n    x = \"Date\",\r\n    y = \"Proportion of deaths\"\r\n  )\r\n\r\n\r\n\r\n\r\n\r\n\r\nhandwashing_start = as.Date('1847-06-01')\r\n\r\nmonthly <- monthly %>% \r\n  mutate(handwashing_started = if_else(date < handwashing_start, FALSE, TRUE))\r\n\r\n\r\n\r\n\r\n\r\nggplot(monthly, aes(date, proportion_deaths, color = handwashing_started)) +\r\n  geom_line() + \r\n  labs(\r\n    x = \"Date\",\r\n    y = \"Proportion of deaths\"\r\n  )\r\n\r\n\r\n\r\n\r\n\r\n\r\nmonthly_summary <- monthly %>% \r\n  group_by(handwashing_started) %>% \r\n  summarise(mean(proportion_deaths))\r\n\r\n\r\n\r\n\r\n\r\nboxplot(proportion_deaths ~ handwashing_started, data = monthly)\r\n\r\n\r\n\r\n\r\n\r\n\r\nt.test(proportion_deaths ~ handwashing_started, data = monthly)\r\n\r\n\r\n\r\n    Welch Two Sample t-test\r\n\r\ndata:  proportion_deaths by handwashing_started\r\nt = 9.6101, df = 92.435, p-value = 1.445e-15\r\nalternative hypothesis: true difference in means is not equal to 0\r\n95 percent confidence interval:\r\n 0.06660662 0.10130659\r\nsample estimates:\r\nmean in group FALSE  mean in group TRUE \r\n         0.10504998          0.02109338 \r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-20-project-6/project-6_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2020-12-20T19:57:58+06:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-12-19-project-1/",
    "title": "Project 1",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Sajib Devnath",
        "url": "https://www.sajibdevnath.com"
      }
    ],
    "date": "2020-12-19",
    "categories": [],
    "contents": "\r\nLibraries:\r\n\r\n\r\nlibrary(tidyverse)\r\n\r\n\r\n\r\n\r\n\r\nlife_expec <- read_csv(here::here(\"data\", \"undata1.csv\")) %>% \r\n  janitor::clean_names()\r\n\r\n\r\n\r\n\r\n\r\n(dt <- life_expec %>% \r\n  filter(year == \"2000-2005\") %>% \r\n  rename(country = country_or_area, gender = subgroup, life_expectancy = value) %>% \r\n  select(country, gender, life_expectancy) %>% \r\n  pivot_wider(names_from = gender, values_from = life_expectancy)   \r\n)\r\n\r\n\r\n# A tibble: 195 x 3\r\n   country     Female  Male\r\n   <chr>        <dbl> <dbl>\r\n 1 Afghanistan     42    42\r\n 2 Albania         79    73\r\n 3 Algeria         72    70\r\n 4 Angola          43    39\r\n 5 Argentina       78    71\r\n 6 Armenia         75    68\r\n 7 Aruba           76    70\r\n 8 Australia       83    78\r\n 9 Austria         82    76\r\n10 Azerbaijan      70    63\r\n# ... with 185 more rows\r\n\r\n\r\n\r\ndt %>% \r\n  ggplot(aes(x = Male, y = Female)) +\r\n  geom_point() +\r\n  xlim(35, 85) +\r\n  ylim(35, 85) + \r\n  geom_abline(slope = 1)\r\n\r\n\r\n\r\n\r\n\r\n\r\nggplot(dt, aes(x=Male, y=Female))+\r\n  geom_point(colour=\"white\", fill=\"chartreuse3\", shape=21, alpha=.55, size=5)+\r\n  geom_abline(intercept = 0, slope = 1, linetype=2)+\r\n  scale_x_continuous(limits=c(35,85))+\r\n  scale_y_continuous(limits=c(35,85))+\r\n  labs(title=\"Life Expectancy at Birth by Country\",\r\n       subtitle=\"Years. Period: 2000-2005. Average.\",\r\n       caption=\"Source: United Nations Statistics Division\",\r\n       x=\"Males\",\r\n       y=\"Females\")\r\n\r\n\r\n\r\n\r\nFinding where Male and Female life expectancy difference is the highest.\r\n\r\n\r\ntop_male <- dt %>% arrange(desc(Male - Female)) %>% head(3)\r\ntop_female <- dt %>% arrange(desc(Female - Male)) %>% head(3)\r\n\r\n\r\n\r\n\r\n\r\nggplot(dt, aes(x=Male, y=Female))+\r\n  geom_point(colour=\"white\", fill=\"chartreuse3\", shape=21, alpha=.55, size=5)+\r\n  geom_abline(intercept = 0, slope = 1, linetype=2)+\r\n  scale_x_continuous(limits=c(35,85))+\r\n  scale_y_continuous(limits=c(35,85))+\r\n  geom_text(data = top_male, aes(label = country)) +\r\n  geom_text(data = top_female, aes(label = country)) +\r\n  labs(title=\"Life Expectancy at Birth by Country\",\r\n       subtitle=\"Years. Period: 2000-2005. Average.\",\r\n       caption=\"Source: United Nations Statistics Division\",\r\n       x=\"Males\",\r\n       y=\"Females\") +\r\n  theme_bw()\r\n\r\n\r\n\r\n\r\n\r\n\r\nlife_expec %>% \r\n  filter(year %in% c(\"1985-1990\", \"2000-2005\")) %>% \r\n  mutate(sub_year = paste(subgroup, year, sep = \"_\")) %>% \r\n  mutate(sub_year=gsub(\"-\", \"_\", sub_year)) %>% \r\n  select(-subgroup, -year) %>% \r\n  pivot_wider(names_from = sub_year, values_from = value) %>% \r\n  mutate(\r\n    diff_female = Female_2000_2005 - Female_1985_1990,\r\n    diff_male = Male_2000_2005 - Male_1985_1990 \r\n  ) -> dt2\r\n\r\n\r\n\r\n\r\n\r\nggplot(dt2, aes(x=diff_male, y=diff_female, label=country_or_area))+\r\n  geom_point(colour=\"white\", fill=\"chartreuse3\", shape=21, alpha=.55, size=5)+\r\n  geom_abline(intercept = 0, slope = 1, linetype=2)+\r\n  xlim(-25, 25) +\r\n  ylim(-25, 25) +\r\n  geom_hline(yintercept = 0) +\r\n  geom_vline(xintercept = 0) +\r\n  labs(title=\"Life Expectancy at Birth by Country in Years\",\r\n       subtitle=\"Difference between 1985-1990 and 2000-2005. Average.\",\r\n       caption=\"Source: United Nations Statistics Division\",\r\n       x=\"Males\",\r\n       y=\"Females\")+\r\ntheme_bw()\r\n\r\n\r\n\r\n\r\n\r\n\r\ntop <- dt2 %>% arrange(diff_male+diff_female) %>% head(3)\r\nbottom <- dt2 %>% arrange(-(diff_male+diff_female)) %>% head(3)\r\n\r\nggplot(dt2, aes(x=diff_male, y=diff_female, label=country_or_area))+\r\n  geom_point(colour=\"white\", fill=\"chartreuse3\", shape=21, alpha=.55, size=5)+\r\n  geom_abline(intercept = 0, slope = 1, linetype=2)+\r\n  geom_text(data = top, aes(label = country_or_area)) +\r\n  geom_text(data = bottom, aes(label = country_or_area)) +\r\n  xlim(-25, 25) +\r\n  ylim(-25, 25) +\r\n  geom_hline(yintercept = 0) +\r\n  geom_vline(xintercept = 0) +\r\n  labs(title=\"Life Expectancy at Birth by Country in Years\",\r\n       subtitle=\"Difference between 1985-1990 and 2000-2005. Average.\",\r\n       caption=\"Source: United Nations Statistics Division\",\r\n       x=\"Males\",\r\n       y=\"Females\")+\r\ntheme_bw()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-19-project-1/project-1_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2020-12-20T01:55:26+06:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-12-19-project-2/",
    "title": "Project 2",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Sajib Devnath",
        "url": "https://www.sajibdevnath.com"
      }
    ],
    "date": "2020-12-19",
    "categories": [],
    "contents": "\r\nWho Is Drunk and When in Ames, Iowa?\r\nLibrary:\r\n\r\n\r\nlibrary(tidyverse)\r\ntheme_set(theme_minimal())\r\n\r\n\r\n\r\nData:\r\n\r\n\r\nba_data <- read_csv(here::here(\"data\", \"breath_alcohol_ames.csv\"))\r\nba_year <- count(ba_data, year)\r\n\r\n\r\n\r\nData manipulation:\r\n\r\n\r\n(\r\n  \r\n  pds <- ba_data %>% \r\n    group_by(location) %>% \r\n    summarise(n = n())\r\n  \r\n)\r\n\r\n\r\n# A tibble: 2 x 2\r\n  location     n\r\n  <chr>    <int>\r\n1 Ames PD    616\r\n2 ISU PD     940\r\n\r\nHourly Breathalyzer tests:\r\n\r\n\r\nba_data %>% \r\n  group_by(hour) %>% \r\n  summarise(test_num = n()) %>% \r\n  ggplot(aes(x = hour, y = test_num)) +\r\n  geom_col()\r\n\r\n\r\n\r\n\r\nMonthly Breathalyzer tests:\r\n\r\n\r\nba_data %>% \r\n  group_by(month) %>% \r\n  summarise(test_num = n()) %>% \r\n  ggplot(aes(x = month, y = test_num)) +\r\n  geom_col(width = .7) +\r\n  scale_x_continuous(breaks = 1:12)\r\n\r\n\r\n\r\n\r\nTests by Gender:\r\n\r\n\r\nba_data %>% \r\n  filter(!is.na(gender)) %>% \r\n  mutate(meanRes = (Res1 + Res2) / 2) %>% \r\n  ggplot(aes(gender, meanRes)) +\r\n  geom_boxplot()\r\n\r\n\r\n\r\n\r\n\r\n\r\nba_data %>% \r\n  mutate(date = lubridate::ymd(paste(year, month, day, sep = \"-\"))) %>% \r\n  mutate(week = lubridate::week(date)) %>% \r\n  mutate(year = as.factor(year)) %>% \r\n  count(year, week) %>% \r\n  ggplot(aes(week, n, color = year)) +\r\n  geom_line() +\r\n  facet_wrap(~ year, ncol = 1, strip.position = \"right\") +\r\n  scale_x_continuous(breaks = seq(0,52,4))\r\n\r\n\r\n\r\n\r\n\r\n\r\nweekly <- ba_data %>% \r\n  mutate(date = lubridate::ymd(paste(year, month, day, sep = \"-\"))) %>% \r\n  mutate(week = lubridate::week(date)) %>% \r\n  mutate(year = as.factor(year)) %>% \r\n  count(year, week) \r\n\r\nggplot() + \r\n  geom_point(data = weekly, aes(x = week, y = n, color = year)) + \r\n  geom_line(data = weekly, aes(x = week, y = n, color = year)) +  # included to make the plot more readable \r\n  geom_segment(data = NULL, arrow = arrow(angle = 20, length = unit(0.1, \"inches\"),\r\n                                          ends = \"last\", type = \"closed\"), \r\n               aes(x = c(20,20), xend = c(15.5,16), y = c(21, 20), yend = c(21, 12.25))) + \r\n  geom_text(data = NULL, aes(x = 23, y = 20.5, label = \"VEISHEA Weeks\"), size = 3) + \r\n  scale_x_continuous(breaks = seq(0,52,4)) +\r\n  theme(aspect.ratio = .5)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-19-project-2/project-2_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2020-12-20T02:31:54+06:00",
    "input_file": {}
  }
]
